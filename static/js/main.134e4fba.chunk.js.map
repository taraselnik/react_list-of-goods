{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","sortByAlpha","setState","ALPABET","sortByLength","LENGTH","sortNone","toReverse","prevState","prepearedGoods","goods","visibleGoods","sort","goodInit","goodNext","localeCompare","length","getReorderedGoods","this","className","type","classNames","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,wGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KA+CE,IAAME,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,YAAc,WACZ,EAAKC,SAAS,CAAEH,SAAUL,EAASS,WAPvC,EAUEC,aAAe,WACb,EAAKF,SAAS,CAAEH,SAAUL,EAASW,UAXvC,EAcEC,SAAW,WACT,EAAKJ,SAAS,CAAEH,SAAUL,EAASM,KAAMF,YAAY,KAfzD,EAkBES,UAAY,WACV,EAAKL,UAAS,SAAAM,GAAS,MAAK,CAAEV,YAAaU,EAAUV,gBAnBzD,4CAsBE,WACE,IAAMW,EA1DH,SACLC,EADK,GAGJ,IADCX,EACF,EADEA,SAAUD,EACZ,EADYA,WAGNa,EAAY,YAAOD,GAqBzB,OAlBAC,EAAaC,MAAK,SAACC,EAAUC,GAC3B,OAAQf,GACN,KAAKL,EAASS,QACZ,OAAOU,EAASE,cAAcD,GAChC,KAAKpB,EAASW,OACZ,OAAOQ,EAASG,OAASF,EAASE,OACpC,KAAKtB,EAASM,KACd,QACE,OAAO,MAITF,GACFa,EAAaC,MAAK,kBAAO,KAKpBD,EAgCkBM,CAAkBtB,EAAiBuB,KAAKrB,OAE/D,OACE,sBAAKsB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CAAE,WAAYH,KAAKrB,MAAME,WAAaL,EAASS,UAEjDmB,QAASJ,KAAKjB,YAPhB,iCAYA,wBACEmB,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CAAE,WAAYH,KAAKrB,MAAME,WAAaL,EAASW,SAEjDiB,QAASJ,KAAKd,aAPhB,4BAYA,wBACEgB,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,YAAaH,KAAKrB,MAAMC,aAE5BwB,QAASJ,KAAKX,UAPhB,sBAYEW,KAAKrB,MAAME,WAAaL,EAASM,MAAQkB,KAAKrB,MAAMC,aAEpD,wBACEsB,KAAK,SACLD,UAAU,4BACVG,QAASJ,KAAKZ,SAHhB,sBAWJ,6BACE,6BACGG,EAAec,KAAI,SAAAC,GAAI,OACtB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,iBAhFtC,GAAyBC,IAAMC,WC9D/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.134e4fba.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  // Sort and reverse goods if needed\n  visibleGoods.sort((goodInit, goodNext) => {\n    switch (sortType) {\n      case SortType.ALPABET:\n        return goodInit.localeCompare(goodNext);\n      case SortType.LENGTH:\n        return goodInit.length - goodNext.length;\n      case SortType.NONE:\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.sort(() => -1);\n  }\n  // eslint-disable-next-line no-console\n  // console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\n// DON'T save goods to the state\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  sortByAlpha = () => {\n    this.setState({ sortType: SortType.ALPABET });\n  };\n\n  sortByLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  sortNone = () => {\n    this.setState({ sortType: SortType.NONE, isReversed: false });\n  };\n\n  toReverse = () => {\n    this.setState(prevState => ({ isReversed: !prevState.isReversed }));\n  };\n\n  render(): React.ReactNode {\n    const prepearedGoods = getReorderedGoods(goodsFromServer, this.state);\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'button',\n              'is-info',\n              { 'is-light': this.state.sortType !== SortType.ALPABET },\n            )}\n            onClick={this.sortByAlpha}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button',\n              'is-info',\n              { 'is-light': this.state.sortType !== SortType.LENGTH },\n            )}\n            onClick={this.sortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button',\n              'is-warning',\n              { 'is-light': !this.state.isReversed },\n            )}\n            onClick={this.toReverse}\n          >\n            Reverse\n          </button>\n\n          {(this.state.sortType !== SortType.NONE || this.state.isReversed)\n          && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.sortNone}\n            >\n              Reset\n            </button>\n          )}\n\n        </div>\n\n        <ul>\n          <ul>\n            {prepearedGoods.map(good => (\n              <li data-cy=\"Good\" key={good}>{good}</li>\n            ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}